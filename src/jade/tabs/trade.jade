section.col-xs-12.content(ng-controller="TradeCtrl")

  //- Disconnected

  group.disconnected(ng-hide="connected")
    p.literal You have to be online to see this screen

  group.disconnected(ng-hide="!connected || loadState.offers")
    p.literal Loading order book...

  //- Connected

  group(ng-show="connected && loadState.offers")
    .settings
      .row
        .col-sm-5.col-md-3.currency-config
          input.form-control.currency#currency_pair(
            name='currency_pair', type='text'
            rp-combobox="pairs_query", rp-combobox-select
            ng-model='order.currency_pair')
        .col-sm-7.col-md-9
          ul.issuers.inline(ng-show='order.first_currency != "LAT"')
            li.label Base currency
            li.value {{order.first_currency}}&ensp;
              span(
                rp-pretty-issuer="order.first_issuer"
                rp-pretty-issuer-contacts="userBlob.data.contacts"
                ) ???
            li: a(href=""
              ng-show='show_issuer_form != "first"'
              ng-click='edit_first_issuer()')
              | change issuer
            li: a(href=""
              ng-show='show_issuer_form == "first"'
              ng-click='show_issuer_form = false')
              | cancel
          ul.issuers.inline(ng-show='order.first_currency == "LAT"')
            li.label Base currency
            li.value LAT
          ul.issuers.inline(ng-show='order.second_currency != "LAT"')
            li.label Counter currency
            li.value {{order.second_currency}}&ensp;
              span(
                rp-pretty-issuer="order.second_issuer"
                rp-pretty-issuer-contacts="userBlob.data.contacts"
                ) ???
            li: a(href=""
              ng-show='show_issuer_form != "second"'
              ng-click='edit_second_issuer()')
              | change issuer
            li: a(href=""
              ng-show='show_issuer_form == "second"'
              ng-click='show_issuer_form = false')
              | cancel
          ul.issuers.inline(ng-show='order.second_currency == "LAT"')
            li.label Counter currency
            li.value LAT

    form.issuer.first-issuer(name='first_issuer_form', ng-show='show_issuer_form == "first"')
      label(for='first_issuer') Base currency issuer ({{order.first_currency}})
      .row
        .col-xs-12.col-sm-8.col-md-5
          input.form-control#first_issuer(
            name='first_issuer', type='text', rp-combobox="issuer_query"
            placeholder='Contact name or DShare address'
            ng-model='order.first_issuer_edit'
            rp-dest, rp-dest-address, rp-dest-contact)
          .errorGroup(rp-errors='first_issuer')
            .error(rp-error-on='rpDest') Not a valid DShare address or contact
        .col-xs-12.col-sm-4.col-md-2
          button.btn.btn-block.btn-success.submit(type='submit', ng-click='save_first_issuer()', ng-disabled="first_issuer_form.$invalid") Confirm

    form.issuer.second-issuer(name='second_issuer_form', ng-show='show_issuer_form == "second"')
      label(for='second_issuer') Counter currency issuer ({{order.second_currency}})
      .row
        .col-xs-12.col-sm-8.col-md-5
          input.form-control#second_issuer(
            name='second_issuer', type='text', rp-combobox="issuer_query"
            placeholder='Contact name or DShare address'
            ng-model='order.second_issuer_edit'
            rp-dest, rp-dest-address, rp-dest-contact)
          .errorGroup(rp-errors='second_issuer')
            .error(rp-error-on='rpDest') Not a valid dshare address or contact
        .col-xs-12.col-sm-4.col-md-2
          button.btn.btn-block.btn-success.submit(type='submit', ng-click='save_second_issuer()', ng-disabled="second_issuer_form.$invalid") Confirm

    .message-select-issuer(ng-hide="order.valid_settings")
      | You must select an issuer to trade currencies. Click the “change issuer”, link above and enter your trusted gateway address or nickname.

    group(ng-if="order.valid_settings")
      ul.ticker
        .row
          li.col-xs-6.col-sm-3
            span Bid =&nbsp;
            span.value
              | {{book.bids[0].TakerGets | rpamountratio:book.bids[0].TakerPays | rpamount:{rel_precision: 5, rel_min_precision: 5} }}
          li.col-xs-6.col-sm-3
            span Ask =&nbsp;
            span.value
              | {{book.asks[0].TakerPays | rpamountratio:book.asks[0].TakerGets | rpamount:{rel_precision: 5, rel_min_precision: 5} }}
          li.col-xs-6.col-sm-3
            span Spread =&nbsp;
            span.value
              | {{book.asks[0].TakerPays | rpamountratio:book.asks[0].TakerGets | rpamountsubtract:(book.bids[0].TakerGets | rpamountratio:book.bids[0].TakerPays) | rpamount:{rel_precision: 5, rel_min_precision: 5} }}
          li.col-xs-6.col-sm-3
            span Last price =&nbsp;
            span.value
              | {{book.last_price | rpamount:{rel_precision: 5, rel_min_precision: 5} }}

      //- Show message if account has not been funded yet.
      .unfunded(ng-hide="account.Balance")
        p.literal You have to be funded before you can trade

      //- 1. Order widgets
      group.row.send-widgets(ng-show="account.Balance")
        .col-xs-12.col-sm-6(ng-repeat="type in ['buy','sell']")
          .trade-widget(ng-switch="order[type].mode")
            .head
              span.capitalize {{type}}
              |  {{order.first_currency}}
            div(ng-switch-when='trade')
              form.mode-form(name="tradeForm", ng-submit='place_order(type)', ng-show="order[type].showWidget")
                .row.order-values
                  .col-xs-12
                    .value-field
                      label Amount To {{type}}
                      .input-group
                        input.form-control(name='amount', type='text'
                        ng-model='order[type].first', ng-change='calc_second(type)'
                        rp-amount
                        rp-amount-positive
                        rp-amount-xrp-limit
                        rp-amount-xrp-limit-currency="{{order.first_currency}}"
                        required)
                        .input-group-addon {{order.first_currency}}
                      .errorGroup(rp-errors='amount')
                        .error(rp-error-on='required') Required
                        .error(rp-error-on='rpAmount') Not a valid amount.
                        .error(rp-error-on='rpAmountPositive') Must be greater than zero
                        .error(rp-error-on='rpAmountXrpLimit') There is a limit of 100 billion XRPs
                  .col-xs-12
                    .value-field
                      label Price of Each
                      .input-group
                        input.form-control(name='price', type='text'
                        ng-model='order[type].price', ng-change='calc_second(type)'
                        rp-amount
                        rp-amount-positive
                        rp-amount-xrp-limit
                        rp-amount-xrp-limit-currency="{{order.second_currency}}"
                        required)
                        .input-group-addon {{order.second_currency}}
                      .errorGroup(rp-errors='price')
                        .error(rp-error-on='required') Required
                        .error(rp-error-on='rpAmount') Not a valid amount.
                        .error(rp-error-on='rpAmountPositive') Must be greater than zero
                        .error(rp-error-on='rpAmountXrpLimit') There is a limit of 100 billion XRPs
                  .col-xs-12
                    .value-field
                      label Order Value (max)
                      .input-group
                        input.form-control(name='value', type='text'
                        ng-model='order[type].second', ng-change='calc_first(type)'
                        rp-amount
                        rp-amount-positive
                        rp-amount-xrp-limit
                        rp-amount-xrp-limit-currency="{{order.second_currency}}"
                        required)
                        .input-group-addon {{order.second_currency}}
                      .errorGroup(rp-errors='value')
                        .error(rp-error-on='required') Required
                        .error(rp-error-on='rpAmount') Not a valid amount.
                        .error(rp-error-on='rpAmountPositive') Must be greater than zero
                        .error(rp-error-on='rpAmountXrpLimit') There is a limit of 100 billion XRPs
                .message
                  p(ng-show='tradeForm.$valid') You are wanting to {{type}}
                    | {{order[type].first_amount | rpamount:{precision: 10} }} {{order[type].first_amount | rpcurrency}}
                    | for
                    | {{order[type].second_amount | rpamount:{precision: 10} }} {{order[type].second_amount | rpcurrency}}
                    | ({{order[type].price_amount | rpamount:{precision: 10} }} {{order[type].second_amount | rpcurrency}}
                    |  per {{order[type].first_amount | rpcurrency}})
                .row
                  .col-xs-6
                    button.btn.btn-success.btn-block.submit(type='submit', ng-disabled='tradeForm.$invalid')
                      span.capitalize {{type}}
                      |  {{order.first_currency}}
              div(ng-hide="order[type].showWidget")
                p.literal You do not have sufficient funds to create an order.

            //- 2. Confirmation
            form.mode-confirm(ng-switch-when='confirm', ng-submit="order_confirmed(type)")
              p.title.literal You are about to create an order to {{type}}
                .amount_feedback
                  span.value {{order[type].first_amount | rpamount}}
                  span.currency  {{order[type].first_amount | rpcurrency}}
                .literal for
                .dest_feedback
                  span.value {{order[type].second_amount | rpamount}}
                  span.currency  {{order[type].second_amount | rpcurrency}}
                p.literal Are you sure?
                .row.row-padding-small
                  .col-xs-6.col-sm-offset-2.col-sm-4.col-md-offset-3.col-md-3
                    button.btn.btn-block.btn-default.back(type='button', ng-click="order[type].mode = 'trade'") &laquo; Back
                  .col-xs-6.col-sm-4.col-md-3
                    button.btn.btn-block.btn-success.submit(type='submit', ng-disabled='confirm_wait') Confirm

            //- 3. Sending

            group.mode-sending(ng-switch-when='sending')
              p.throbber.literal Sending order to DShare network...

            //- 4. Done

            group.mode-done(ng-switch-when='done')
              group.pending(ng-show='order[type].tx_result=="pending"')
                h2.tx-status Your order has been submitted.
              group.result-success(ng-show='order[type].tx_result=="cleared"')
                h2.tx-status Your order is now active!
              group.result-error(ng-show='order[type].tx_result=="error"')
                h2.tx-status Request has been denied!
                p We were unable to submit the request. Please try again later.
              group.result-malformed(ng-show='order[type].tx_result=="malformed"')
                h2.tx-status Request is malformed!
                p Your request is invalid, reason: {{order[type].engine_result}} - {{order[type].engine_result_message}}
              group.result-malformed(ng-show='order[type].tx_result=="claim"')
                h2.tx-status Transaction failed!
                p(ng-switch on="order[type].engine_result")
                  span(ng-switch-when="tecUNFUNDED_ORDER")
                    | You do not have enough {{type == 'buy' ? order.second_currency : order.first_currency}} to create this order.
                  span(ng-switch-when="tecINSUF_RESERVE_OFFER")
                    | You must have at least {{account.reserve_to_add_trust | rpamount}} LAT to submit an order.&nbsp;
                    a(href="https://dshare.com/wiki/Reserves", target="_blank") More information.
                  span(ng-switch-default)
                    | Error: {{order[type].engine_result_message}}
              group.result-failed(ng-show='order[type].tx_result=="failed"')
                h2.tx-status Trade failed!
                p(ng-switch on="order[type].engine_result")
                  span(ng-switch-default) Trade failed, reason: {{order[type].engine_result_message}}
              group.result-failed(ng-show='order[type].tx_result=="local"')
                h2.tx-status Transaction failed!
                p(ng-switch on="order[type].engine_result")
                  span(ng-switch-when="telINSUF_FEE_P")
                    | The particular server you sent the transaction to was too busy to forward or process
                    | your transaction at the fee you included in it.
              group.result-failed(ng-show='order[type].tx_result=="unknown"')
                h2.tx-status {{order[type].engine_result}}
                p(ng-switch on="order[type].engine_result")
                  span(ng-switch-default) {{order[type].engine_result_message}}
              hr
              .actionLink
                a(href="#trade", ng-click="reset_widget(type)") Submit another order

      .btn-group
        button.btn.btn-default(
          type="button"
          ng-class="{'btn-info': order.listing == 'orderbook'}"
          ng-click="setListing('orderbook')") Order book
        button.btn.btn-default(
          type="button"
          ng-disabled="!account.Balance"
          ng-class="{'btn-info': order.listing == 'my'}"
          ng-click="setListing('my')") My Orders

      .listings
        .my(ng-show="order.listing == 'my'")
          div(ng-hide="isEmpty(offers)")
            .row.head.hidden-xs
              .col-sm-1.type Type
              .col-sm-3.pair Pair
              .col-sm-3.price Price
              .col-sm-3.amount Amount
              .col-sm-2.action Action
          .row(ng-repeat="entry in offers", ng-class="{cancelling: cancelling}")
            .col-sm-1.type(data-label="Type") {{entry.type | rpucfirst}}
            .col-sm-3.pair(data-label="Pair")
              .first {{entry.first | rpcurrency}}
                span(ng-show="entry.first.issuer().to_json()") &nbsp;(
                  span(
                    rp-pretty-issuer="entry.first.issuer().to_json()"
                    rp-pretty-issuer-contacts="userBlob.data.contacts"
                  ) ???
                  | )
              .second {{entry.second | rpcurrency}}
                span(ng-show="entry.second.issuer().to_json()") &nbsp;(
                  span(
                    rp-pretty-issuer="entry.second.issuer().to_json()"
                    rp-pretty-issuer-contacts="userBlob.data.contacts"
                  ) ???
                  | )
            .col-sm-3.price.rpamount(data-label="Price") {{entry.second | rpamountratio:entry.first | rpamount:{precision: 5, min_precision: 5} }}
              span.currency  {{entry.second | rpcurrency}}
            .col-sm-3.amount.rpamount(data-label="Amount") {{entry.first | rpamount}}
              span.currency  {{entry.first | rpcurrency}}
            .col-sm-2.action
              //- Should not be possible to click cancel twice.
              a.danger(href="", ng-click='cancel_order()') Cancel
          .emptyMessage(ng-show="isEmpty(offers)")
            p.literal You haven&#39;t placed any orders.

        //- TODO hide one column (size/sum) to show bids/ask in the same line for mobile phones.
        //- TODO highlight changes
        .row.orderbook(ng-show="order.listing == 'orderbook'")
          .bids.col-xs-12.col-sm-6
            .title Bids
            .row.head(ng-show="book.bids.length")
              .col-xs-4.sum Sum
                .currency {{book.bids[0].TakerPays | rpcurrency}}
              .col-xs-4.size Size
                .currency {{book.bids[0].TakerPays | rpcurrency}}
              .col-xs-4.price Bid Price
                .currency {{book.bids[0].TakerGets | rpcurrency}}
            .row(ng-repeat='order in book.bids')
              .col-xs-4.rpamount.sum
                a(href="", title="Sell {{order.showSum}} {{book.bids[0].showTakerPays | rpcurrency}}"
                  ng-click="fill_widget('sell',order,true)")
                  span(rp-bind-color-amount="order.showSum")
              .col-xs-4.rpamount.size(rp-bind-color-amount="order.showTakerPays")
              .col-xs-4.rpamount.price
                a(href="", ng-click="fill_widget('sell',order)")
                  span(rp-bind-color-amount="order.showPrice")
            .message(ng-show='!book.bids.length') There are currently no bids for this pair.
          .asks.col-xs-12.col-sm-6
            .title Asks
            .row.head(ng-show="book.asks.length")
              .col-xs-4.price Ask Price
                .currency {{book.asks[0].TakerPays | rpcurrency}}
              .col-xs-4.size Size
                .currency {{book.asks[0].TakerGets | rpcurrency}}
              .col-xs-4.sum Sum
                .currency {{book.asks[0].TakerGets | rpcurrency}}
            .row(ng-repeat='order in book.asks')
              .col-xs-4.rpamount.price
                a(href="", ng-click="fill_widget('buy',order)")
                  span(rp-bind-color-amount="order.showPrice")
              .col-xs-4.rpamount.size(rp-bind-color-amount="order.showTakerGets")
              .col-xs-4.rpamount.sum
                a(href="", title="Buy {{order.showSum}} {{book.asks[0].showTakerGets | rpcurrency}}"
                  ng-click="fill_widget('buy',order,true)")
                  span(rp-bind-color-amount="order.showSum")
            .message(ng-show='!book.asks.length') There are currently no asks for this pair.
