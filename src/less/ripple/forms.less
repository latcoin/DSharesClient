// Common form controls
//
// Shared size and type resets for form controls. Apply `.form-control` to any
// of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]

.call-to-action {
  margin-top: 20px;
}

.form-control {
  font-size: @font-size-medium;
  .form-control-focus(#999);
  margin-bottom: 20px;
}

.btn {
  .spinner .spinnerInner {
    left: -22px;
    top: -12px;
  }
}

form {
  .errorGroup {
    position: relative;
    z-index: 1;
    height: 0;
    overflow: visible;
    top: -20px;
    left: 0;
  }
  .input-group + .errorGroup {
    position: inherit;
    height: auto;
  }

  .error,
  err {
    color: #DC4D38;
    font-size: 13px;
    height: 23px;
  }

  .field-hint {
    font-size: 0.87em;
    color: #666;
  }

  .notice {
    color: #ff9a00;
  }

  .success {
    color: green;
    font-size: 13px;
  }

  .amount input, .amount select {
    vertical-align: bottom;
  }

  .amount .value {
    margin-right: 10px;
  }

  .helperInput {
    input {
      display: inline;
      margin: 0 5px 0 0;
    }
    label {
      display: inline;
      font-size: 12px;
    }
  }
}

// Undo default Bootstrap invalid style for Angular-managed forms
input.ng-invalid:focus:required:invalid,
textarea.ng-invalid:focus:required:invalid,
select.ng-invalid:focus:required:invalid {
  //  color: #999;
  //  border-color: #999;
  //  .box-shadow(~"inset 0 1px 1px rgba(0,0,0,.075), 0 0 10px rgba(0,0,0,.2)");
}

// Only mark field invalid that have been edited
input.ng-invalid.ng-dirty {
  color: #B94A48;
  border-color: darken(#ee5f5b, 10%);

  &:focus {
    @shadow: 0 0 6px lighten(#ee5f5b, 20%);
    .box-shadow(@shadow);
  }
}

// De-emphasize submit button if form invalid
//
// This is better than just disabling the button because this way we can handle
// a click on the button. If the user tries to submit, we can detect this and
// then show them *why* the form is not yet valid.
form.ng-invalid .btn-success {
  background: #ccc;
  border-color: #ccc;
}