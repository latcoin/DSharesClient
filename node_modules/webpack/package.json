{
  "name": "webpack",
  "version": "0.10.0",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "description": "Packs CommonJs/AMD/Labeled Modules for the browser. Allows to split your codebase into multiple bundles, which can be loaded on demand. Support loaders to preprocess files, i.e. json, jade, coffee, css, less, ... and your custom stuff.",
  "dependencies": {
    "esprima": "1.0.x",
    "mkdirp": "0.3.x",
    "optimist": "0.5.x",
    "uglify-js": "2.3.x",
    "async": "0.2.x",
    "enhanced-resolve": "0.5.x",
    "clone": "0.1.x",
    "webpack-core": "0.2.x",
    "node-libs-browser": "0.1.x",
    "tapable": "0.1.x",
    "base64-encode": "1.0.x"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    }
  ],
  "devDependencies": {
    "mocha": "1.10.x",
    "should": "1.2.x",
    "vm-browserify": "0.0.x",
    "express": "3.2.x",
    "webpack-dev-middleware": "0.10.x",
    "worker-loader": "0.5.x",
    "raw-loader": "0.5.x",
    "json-loader": "0.5.x",
    "jade-loader": "0.5.x",
    "coffee-loader": "0.6.x",
    "css-loader": "0.6.x",
    "less-loader": "0.5.x",
    "style-loader": "0.5.x",
    "script-loader": "0.5.x",
    "bundle-loader": "0.5.x",
    "file-loader": "0.5.x",
    "val-loader": "0.5.x",
    "i18n-webpack-plugin": "0.1.x",
    "component-webpack-plugin": "0.1.x"
  },
  "engines": {
    "node": ">=0.6"
  },
  "homepage": "http://github.com/webpack/webpack",
  "main": "lib/webpack.js",
  "bin": {
    "webpack": "./bin/webpack.js"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "readme": "[![webpack](http://webpack.github.com/assets/logo.png)](http://webpack.github.com)\r\n\r\n[documentation](https://github.com/webpack/docs/wiki)\r\n\r\n# Introduction\r\n\r\nwebpack is a bundler for modules. The main purpose is to bundle javascript files for usage in browser.\r\n\r\n**TL;DR**\r\n\r\n* bundles [CommonJs](http://www.commonjs.org/specs/modules/1.0/), [AMD](https://github.com/amdjs/amdjs-api/wiki/AMD) and/or [Labeled Modules](https://github.com/labeledmodules/labeled-modules-spec/wiki) modules. (even combined)\r\n* can create a single bundle or a bunch of chunks loaded on demand, to reduce initial loading time.\r\n* dependencies are resolved while compiling, this makes the runtime very small\r\n* loader can preprocess files while compiling, i. e. coffee-script to javascript\r\n\r\nCheck the [documentation](https://github.com/webpack/docs/wiki) if you want to know more...\r\n\r\n# Examples\r\n\r\nTake a look at the [`examples`](https://github.com/webpack/webpack/tree/master/examples) folder.\r\n\r\n# Features\r\n\r\n* loaders are chainable\r\n* loaders run in node.js and can do a bunch of stuff\r\n* option to name your file with a hash of the content\r\n* watch mode\r\n* SourceUrl and SourceMap support\r\n* plugin system, extend webpack or build a complete different compiler\r\n * i. e. [component](https://github.com/webpack/component-webpack-plugin), [rewire](https://github.com/jhnns/rewire-webpack) and [more...](https://github.com/webpack/docs/wiki/webpack-plugins)\r\n* [interfaces](https://github.com/webpack/docs/wiki/webpack-usage)\r\n * CLI with [arguments](https://github.com/webpack/docs/wiki/webpack-detailed-usage)\r\n * CLI with [config file](https://github.com/webpack/docs/wiki/webpack-options), [arguments](https://github.com/webpack/docs/wiki/webpack-detailed-usage) are still possible\r\n * usable as library from node.js\r\n * usable as [grunt plugin](https://github.com/webpack/grunt-webpack)\r\n* browser replacements\r\n * comes with browser replacements for some node.js modules\r\n* see also\r\n * [webpack-dev-middleware](https://github.com/webpack/webpack-dev-middleware)\r\n * [webpack-dev-server](https://github.com/webpack/webpack-dev-server)\r\n * [enhanced-resolve](https://github.com/webpack/enhanced-resolve) and\r\n * [enhanced-require](https://github.com/webpack/enhanced-require)\r\n\r\n## A small example what's possible\r\n\r\n``` javascript\r\nvar commonjs = require(\"./commonjs\");\r\nrequire: \"./labeled\";\r\ndefine([\"amd-module\", \"./file\"], function(amdModule, file) {\r\n\trequire([\"big-module/big/file\"], function(big) {\r\n\t\t// AMD require acts as split point\r\n\t\t// and \"big-module/big/file\" is only downloaded when requested\r\n\t\tvar stuff = require(\"../my/stuff\");\r\n\t\t// dependencies automatically goes in chunk too\r\n\t});\r\n});\r\n\r\nrequire(\"coffee!./cup.coffee\");\r\n// The loader syntax allows to proprocess files\r\n// for common stuff you can bind RegExps to loaders\r\n// if you also add \".coffee\" to the default extensions\r\n// you can write:\r\nrequire(\"./cup\");\r\n\r\nfunction loadTemplate(name) {\r\n\treturn require(\"./templates/\" + name \".jade\");\r\n\t// dynamic requires are supported\r\n\t// while compiling we figure out what can be requested\r\n\t// here everything in \"./templates\" that matches /^.*\\.jade$/\r\n\t// (can also be in subdirectories)\r\n}\r\n\r\nrequire(\"imports?_=underscore!../loaders/my-ejs-loader!./template.html\");\r\n// you can chain loaders\r\n// you can configure loaders with query parameters\r\n// and loaders resolve similar to modules\r\n\r\n// ...you can combine everything\r\nfunction loadTemplateAsync(name, callback) {\r\n\trequire([\"bundle?lazy!./templates/\" + name + \".jade\"], function(templateBundle) {\r\n\t\ttemplateBundle(callback);\r\n\t});\r\n}\r\n```\r\n\r\n\r\n\r\n## Documentation\r\n\r\n[documentation](https://github.com/webpack/docs/wiki)\r\n\r\n\r\n\r\n## Tests\r\n\r\nYou can run the unit tests with `npm test`. [![build status](https://secure.travis-ci.org/webpack/webpack.png)](http://travis-ci.org/webpack/webpack)\r\n\r\nYou can run the browser tests:\r\n\r\n```\r\ncd test/browsertests\r\nnode build\r\n```\r\n\r\nand open `tests.html` in browser.\r\n\r\n\r\n\r\n## Contribution\r\n\r\nYou are welcome to contribute by writing issues or pull requests.\r\nIt would be nice if you open source your own loaders or webmodules. :)\r\n\r\nYou are also welcome to correct any spelling mistakes or any language issues, because my english is not perfect...\r\n\r\n\r\n\r\n\r\n## License\r\n\r\nCopyright (c) 2012-2013 Tobias Koppers\r\n\r\nMIT (http://www.opensource.org/licenses/mit-license.php)\r\n\r\n\r\n\r\n\r\n## Dependencies\r\n\r\n* [esprima](http://esprima.org/)\r\n* [enhanced-resolve](https://github.com/webpack/enhanced-resolve)\r\n* [uglify-js](https://github.com/mishoo/UglifyJS)\r\n* [mocha](https://github.com/visionmedia/mocha)\r\n* [should](https://github.com/visionmedia/should.js)\r\n* [optimist](https://github.com/substack/node-optimist)\r\n* [async](https://github.com/caolan/async)\r\n* [mkdirp](http://esprima.org/)\r\n* [clone](https://github.com/pvorb/node-clone)\r\n* [base64-encode](https://github.com/ForbesLindesay/base64-encode)\r\n\r\n[![Dependency Status](https://david-dm.org/webpack/webpack.png)](https://david-dm.org/webpack/webpack)\r\n",
  "readmeFilename": "README.md",
  "_id": "webpack@0.10.0",
  "dist": {
    "shasum": "1a3b8ccef41837275da460069ad85e4e89d28ab8"
  },
  "_from": "webpack@~0.10.0-beta24",
  "_resolved": "https://registry.npmjs.org/webpack/-/webpack-0.10.0.tgz"
}
